// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WaterBillCalculator.Data;

#nullable disable

namespace WaterBillCalculator.Migrations
{
    [DbContext(typeof(WaterBillContext))]
    [Migration("20250211134133_RemovedUnneededFields")]
    partial class RemovedUnneededFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("WaterBillCalculator.Data.BillDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BillDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("BilledAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal?>("BilledUnits")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("StandingCharge")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("WaterBillCalculator.Data.MeterDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MeterLocation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MeterName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MeterNumber")
                        .HasColumnType("longtext");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Meters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MeterLocation = "Main Entrance",
                            MeterName = "Meter By Entrance",
                            MeterNumber = "0001"
                        },
                        new
                        {
                            Id = 2,
                            MeterLocation = "Upper Field",
                            MeterName = "Peters Upper Field",
                            MeterNumber = "0002",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 3,
                            MeterLocation = "Lower Field",
                            MeterName = "Peters Lower Field",
                            MeterNumber = "0003",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 4,
                            MeterLocation = "Our Field",
                            MeterName = "Our Field",
                            MeterNumber = "0004",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 5,
                            MeterLocation = "Just Before it Splits Between the Houses",
                            MeterName = "The Houses",
                            MeterNumber = "0005",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 6,
                            MeterLocation = "Riverbank Cottage",
                            MeterName = "Riverbank Cottage",
                            MeterNumber = "0006",
                            ParentId = 5
                        },
                        new
                        {
                            Id = 7,
                            MeterLocation = "Riverside Barn",
                            MeterName = "Riverside Barn",
                            MeterNumber = "0007",
                            ParentId = 5
                        },
                        new
                        {
                            Id = 8,
                            MeterLocation = "Waunwen Farm House",
                            MeterName = "Waunwen Farm House",
                            MeterNumber = "0008",
                            ParentId = 5
                        });
                });

            modelBuilder.Entity("WaterBillCalculator.Data.MeterReadings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CalculatedBillShare")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("MeterId")
                        .HasColumnType("int");

                    b.Property<decimal>("Reading")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("ReadingDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("MeterId");

                    b.ToTable("Readings");
                });

            modelBuilder.Entity("WaterBillCalculator.Data.MeterDetails", b =>
                {
                    b.HasOne("WaterBillCalculator.Data.MeterDetails", "ParentMeter")
                        .WithMany("ChildMeters")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentMeter");
                });

            modelBuilder.Entity("WaterBillCalculator.Data.MeterReadings", b =>
                {
                    b.HasOne("WaterBillCalculator.Data.BillDetails", null)
                        .WithMany("MeterReadings")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WaterBillCalculator.Data.MeterDetails", "Meter")
                        .WithMany("MeterReadings")
                        .HasForeignKey("MeterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meter");
                });

            modelBuilder.Entity("WaterBillCalculator.Data.BillDetails", b =>
                {
                    b.Navigation("MeterReadings");
                });

            modelBuilder.Entity("WaterBillCalculator.Data.MeterDetails", b =>
                {
                    b.Navigation("ChildMeters");

                    b.Navigation("MeterReadings");
                });
#pragma warning restore 612, 618
        }
    }
}
